# -*- coding: utf-8 -*-
"""Project_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zIdV6GnOHerdskJb7nmI2DjbbjCFYda8
"""

import pandas as pd
import numpy as np

## Q1: Load the CSV file into a Pandas DataFrame."""
df =pd.read_csv('/content/insurance_data.csv')
df

## Q2: Display the total number of policyholders in the dataset."""
df['PolicyID'].nunique()

## Q3: What are the unique policy types available? Count each type."""
df.groupby('PolicyType')['PolicyType'].count()

## Q4: Find the average premium amount by policy type."""
df.groupby('PolicyType')['PremiumAmount'].mean()

## Q5: What is the total claim amount by claim status (Approved, Rejected, Pending)?"""
df.groupby('ClaimStatus')['ClaimAmount'].sum()

## Q6: Which city has the highest number of policyholders?"""
df.groupby('City')['City'].count().sort_values(ascending =False).head(1)

## Q7: Find the top 5 customers who paid the highest premiums."""
df.sort_values('PremiumAmount',ascending =False).head(5)

## Q8: What is the average claim amount by gender?"""
df.groupby('Gender')['ClaimAmount'].mean()

## Q9: How many policies started in each year? (Hint: extract year from PolicyStartDate)"""
df['PolicyStartDate']=pd.to_datetime(df['PolicyStartDate'])
df['Year'] =df['PolicyStartDate'].dt.year
df.groupby('Year')['PolicyType'].count()

## Q10: What is the approval rate for claims per policy type?"""
df_approve = df[df['ClaimStatus']=='Approved']
df_approve.groupby('PolicyType')['ClaimStatus'].count()

## Q11: Find the policyholder(s) with the highest claim amount."""
df.sort_values('ClaimAmount',ascending =False).head(1)

## Q13: Identify any customers under age 25 who have a policy type of 'Health'."""
df[(df['Age']<25) & (df['PolicyType']=='Health')]

## Q14: Which branch has collected the highest total premium amount?"""
df.groupby('BranchCode')['PremiumAmount'].sum().sort_values(ascending = False).head(1)

## Q15: List all rejected claims above $5000 in claim amount."""
df[(df['ClaimAmount']>5000) & (df['ClaimStatus']=='Rejected')]